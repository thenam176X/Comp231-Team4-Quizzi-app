{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thenam\\\\Desktop\\\\react-website-v1-master\\\\src\\\\components\\\\pages\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizCreationPage = () => {\n  _s();\n  const [quiz, setQuiz] = useState({\n    title: \"\",\n    questions: [],\n    answers: [],\n    quizType: \"multiple-choice\"\n  });\n  const handleTitleChange = e => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      title: e.target.value\n    }));\n  };\n  const handleQuestionChange = (index, e) => {\n    const newQuestions = [...quiz.questions];\n    newQuestions[index] = e.target.value;\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      questions: newQuestions\n    }));\n  };\n  const handleAnswerChange = (index, e) => {\n    const newAnswers = [...quiz.answers];\n    newAnswers[index] = e.target.value;\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      answers: newAnswers\n    }));\n  };\n  const handleAddQuestion = () => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      questions: [...prevQuiz.questions, \"\"],\n      answers: [...prevQuiz.answers, \"\"]\n    }));\n  };\n  const handleQuizTypeChange = e => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      quizType: e.target.value\n    }));\n  };\n  const handleQuizSubmit = e => {\n    e.preventDefault();\n    console.log(quiz);\n  };\n\n  // Function to auto-resize the input field based on its content\n  const autoResizeInput = element => {\n    element.style.height = \"auto\";\n    element.style.height = `${element.scrollHeight}px`;\n  };\n  const handleInputKeyUp = (index, e) => {\n    // Call autoResizeInput whenever the user types or changes the content\n    autoResizeInput(e.target);\n    handleQuestionChange(index, e); // Update the question content in the state\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleQuizSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"quizTitle\",\n          children: \"Quiz Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"quizTitle\",\n          value: quiz.title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"quizType\",\n          children: \"Select Quiz Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          id: \"quizType\",\n          value: quiz.quizType,\n          onChange: handleQuizTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"multiple-choice\",\n            children: \"Multiple Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true-false\",\n            children: \"True/False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fill-in-the-blank\",\n            children: \"Fill in the Blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: `question${index + 1}`,\n          children: [\"Question \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"question-input\",\n          contentEditable: true,\n          onKeyUp: e => handleInputKeyUp(index, e),\n          onBlur: e => handleQuestionChange(index, e),\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          for: `answer${index + 1}`,\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: `answer${index + 1}`,\n          value: quiz.answers[index] || \"\",\n          onChange: e => handleAnswerChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"success\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizCreationPage, \"82SPoC39t3Aut4tfl7nioNfn68Y=\");\n_c = QuizCreationPage;\nexport default QuizCreationPage;\nvar _c;\n$RefreshReg$(_c, \"QuizCreationPage\");","map":{"version":3,"names":["React","useState","useRef","Button","Form","FormGroup","Label","Input","jsxDEV","_jsxDEV","QuizCreationPage","_s","quiz","setQuiz","title","questions","answers","quizType","handleTitleChange","e","prevQuiz","target","value","handleQuestionChange","index","newQuestions","handleAnswerChange","newAnswers","handleAddQuestion","handleQuizTypeChange","handleQuizSubmit","preventDefault","console","log","autoResizeInput","element","style","height","scrollHeight","handleInputKeyUp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","onChange","map","question","contentEditable","onKeyUp","onBlur","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thenam/Desktop/react-website-v1-master/src/components/pages/Menu.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst QuizCreationPage = () => {\r\n  const [quiz, setQuiz] = useState({\r\n    title: \"\",\r\n    questions: [],\r\n    answers: [],\r\n    quizType: \"multiple-choice\",\r\n  });\r\n\r\n  const handleTitleChange = (e) => {\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, title: e.target.value }));\r\n  };\r\n\r\n  const handleQuestionChange = (index, e) => {\r\n    const newQuestions = [...quiz.questions];\r\n    newQuestions[index] = e.target.value;\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, questions: newQuestions }));\r\n  };\r\n\r\n  const handleAnswerChange = (index, e) => {\r\n    const newAnswers = [...quiz.answers];\r\n    newAnswers[index] = e.target.value;\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, answers: newAnswers }));\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuiz((prevQuiz) => ({\r\n      ...prevQuiz,\r\n      questions: [...prevQuiz.questions, \"\"],\r\n      answers: [...prevQuiz.answers, \"\"],\r\n    }));\r\n  };\r\n\r\n  const handleQuizTypeChange = (e) => {\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, quizType: e.target.value }));\r\n  };\r\n\r\n  const handleQuizSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(quiz);\r\n  };\r\n\r\n  // Function to auto-resize the input field based on its content\r\n  const autoResizeInput = (element) => {\r\n    element.style.height = \"auto\";\r\n    element.style.height = `${element.scrollHeight}px`;\r\n  };\r\n\r\n  const handleInputKeyUp = (index, e) => {\r\n    // Call autoResizeInput whenever the user types or changes the content\r\n    autoResizeInput(e.target);\r\n    handleQuestionChange(index, e); // Update the question content in the state\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Create a New Quiz</h2>\r\n      <Form onSubmit={handleQuizSubmit}>\r\n        <FormGroup>\r\n          <Label for=\"quizTitle\">Quiz Title:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"quizTitle\"\r\n            value={quiz.title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"quizType\">Select Quiz Type:</Label>\r\n          <Input\r\n            type=\"select\"\r\n            id=\"quizType\"\r\n            value={quiz.quizType}\r\n            onChange={handleQuizTypeChange}\r\n          >\r\n            <option value=\"multiple-choice\">Multiple Choice</option>\r\n            <option value=\"true-false\">True/False</option>\r\n            <option value=\"fill-in-the-blank\">Fill in the Blank</option>\r\n          </Input>\r\n        </FormGroup>\r\n        {quiz.questions.map((question, index) => (\r\n          <FormGroup key={index}>\r\n            <Label for={`question${index + 1}`}>Question {index + 1}:</Label>\r\n            {/* Use a contenteditable span instead of Input */}\r\n            <span\r\n              className=\"question-input\"\r\n              contentEditable\r\n              onKeyUp={(e) => handleInputKeyUp(index, e)}\r\n              onBlur={(e) => handleQuestionChange(index, e)}\r\n            >\r\n              {question}\r\n            </span>\r\n            {/* Add an input field for the answer of each question */}\r\n            <Label for={`answer${index + 1}`}>Answer:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`answer${index + 1}`}\r\n              value={quiz.answers[index] || \"\"}\r\n              onChange={(e) => handleAnswerChange(index, e)}\r\n            />\r\n          </FormGroup>\r\n        ))}\r\n        <Button color=\"primary\" onClick={handleAddQuestion}>\r\n          Add Question\r\n        </Button>{\" \"}\r\n        <Button type=\"submit\" color=\"success\">\r\n          Create Quiz\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}