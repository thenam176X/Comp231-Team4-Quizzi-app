{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thenam\\\\Desktop\\\\react-website-v1-master\\\\src\\\\components\\\\pages\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizCreationPage = () => {\n  _s();\n  const [quiz, setQuiz] = useState({\n    title: \"\",\n    questions: []\n  });\n  const handleTitleChange = e => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      title: e.target.value\n    }));\n  };\n  const handleQuestionChange = (index, e) => {\n    const newQuestions = [...quiz.questions];\n    newQuestions[index] = e.target.value;\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      questions: newQuestions\n    }));\n  };\n  const handleAddQuestion = () => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      questions: [...prevQuiz.questions, \"\"]\n    }));\n  };\n  const handleQuizSubmit = e => {\n    e.preventDefault();\n    console.log(quiz);\n    // Here, you can send the quiz data to your backend or do further processing\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleQuizSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"quizTitle\",\n          children: \"Quiz Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"quizTitle\",\n          value: quiz.title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: `question${index + 1}`,\n          children: [\"Question \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: `question${index + 1}`,\n          value: question,\n          onChange: e => handleQuestionChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"success\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizCreationPage, \"anY3J1xNok9QTaBPmXfY+3nxWJc=\");\n_c = QuizCreationPage;\nexport default QuizCreationPage;\nvar _c;\n$RefreshReg$(_c, \"QuizCreationPage\");","map":{"version":3,"names":["React","useState","Button","Form","FormGroup","Label","Input","jsxDEV","_jsxDEV","QuizCreationPage","_s","quiz","setQuiz","title","questions","handleTitleChange","e","prevQuiz","target","value","handleQuestionChange","index","newQuestions","handleAddQuestion","handleQuizSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","onChange","map","question","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thenam/Desktop/react-website-v1-master/src/components/pages/Menu.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst QuizCreationPage = () => {\r\n  const [quiz, setQuiz] = useState({\r\n    title: \"\",\r\n    questions: [],\r\n  });\r\n\r\n  const handleTitleChange = (e) => {\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, title: e.target.value }));\r\n  };\r\n\r\n  const handleQuestionChange = (index, e) => {\r\n    const newQuestions = [...quiz.questions];\r\n    newQuestions[index] = e.target.value;\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, questions: newQuestions }));\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuiz((prevQuiz) => ({\r\n      ...prevQuiz,\r\n      questions: [...prevQuiz.questions, \"\"],\r\n    }));\r\n  };\r\n\r\n  const handleQuizSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(quiz);\r\n    // Here, you can send the quiz data to your backend or do further processing\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Create a New Quiz</h2>\r\n      <Form onSubmit={handleQuizSubmit}>\r\n        <FormGroup>\r\n          <Label for=\"quizTitle\">Quiz Title:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"quizTitle\"\r\n            value={quiz.title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </FormGroup>\r\n        {quiz.questions.map((question, index) => (\r\n          <FormGroup key={index}>\r\n            <Label for={`question${index + 1}`}>Question {index + 1}:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`question${index + 1}`}\r\n              value={question}\r\n              onChange={(e) => handleQuestionChange(index, e)}\r\n            />\r\n          </FormGroup>\r\n        ))}\r\n        <Button color=\"primary\" onClick={handleAddQuestion}>\r\n          Add Question\r\n        </Button>{\" \"}\r\n        <Button type=\"submit\" color=\"success\">\r\n          Create Quiz\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}