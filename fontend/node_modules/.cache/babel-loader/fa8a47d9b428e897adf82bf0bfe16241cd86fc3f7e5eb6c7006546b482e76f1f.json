{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thenam\\\\Desktop\\\\react-website-v1-master\\\\src\\\\components\\\\pages\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizCreationPage = () => {\n  _s();\n  const [quiz, setQuiz] = useState({\n    title: \"\",\n    questions: [],\n    quizType: \"multiple-choice\" // Default quiz type, you can add other types\n  });\n\n  const handleTitleChange = e => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      title: e.target.value\n    }));\n  };\n  const handleQuestionChange = (index, e) => {\n    const newQuestions = [...quiz.questions];\n    newQuestions[index] = e.target.value;\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      questions: newQuestions\n    }));\n  };\n  const handleAddQuestion = () => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      questions: [...prevQuiz.questions, \"\"]\n    }));\n  };\n  const handleQuizTypeChange = e => {\n    setQuiz(prevQuiz => ({\n      ...prevQuiz,\n      quizType: e.target.value\n    }));\n  };\n  const handleQuizSubmit = e => {\n    e.preventDefault();\n    console.log(quiz);\n    // Here, you can send the quiz data to your backend or do further processing\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleQuizSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"quizTitle\",\n          children: \"Quiz Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"quizTitle\",\n          value: quiz.title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"quizType\",\n          children: \"Select Quiz Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          id: \"quizType\",\n          value: quiz.quizType,\n          onChange: handleQuizTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"multiple-choice\",\n            children: \"Multiple Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true-false\",\n            children: \"True/False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fill-in-the-blank\",\n            children: \"Fill in the Blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: `question${index + 1}`,\n          children: [\"Question \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: `question${index + 1}`,\n          value: question,\n          onChange: e => handleQuestionChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"success\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizCreationPage, \"8kWaq3w8AbgiIglW9ryGvHs0uAE=\");\n_c = QuizCreationPage;\nexport default QuizCreationPage;\nvar _c;\n$RefreshReg$(_c, \"QuizCreationPage\");","map":{"version":3,"names":["React","useState","Button","Form","FormGroup","Label","Input","jsxDEV","_jsxDEV","QuizCreationPage","_s","quiz","setQuiz","title","questions","quizType","handleTitleChange","e","prevQuiz","target","value","handleQuestionChange","index","newQuestions","handleAddQuestion","handleQuizTypeChange","handleQuizSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","onChange","map","question","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thenam/Desktop/react-website-v1-master/src/components/pages/Menu.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst QuizCreationPage = () => {\r\n  const [quiz, setQuiz] = useState({\r\n    title: \"\",\r\n    questions: [],\r\n    quizType: \"multiple-choice\", // Default quiz type, you can add other types\r\n  });\r\n\r\n  const handleTitleChange = (e) => {\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, title: e.target.value }));\r\n  };\r\n\r\n  const handleQuestionChange = (index, e) => {\r\n    const newQuestions = [...quiz.questions];\r\n    newQuestions[index] = e.target.value;\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, questions: newQuestions }));\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuiz((prevQuiz) => ({\r\n      ...prevQuiz,\r\n      questions: [...prevQuiz.questions, \"\"],\r\n    }));\r\n  };\r\n\r\n  const handleQuizTypeChange = (e) => {\r\n    setQuiz((prevQuiz) => ({ ...prevQuiz, quizType: e.target.value }));\r\n  };\r\n\r\n  const handleQuizSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(quiz);\r\n    // Here, you can send the quiz data to your backend or do further processing\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Create a New Quiz</h2>\r\n      <Form onSubmit={handleQuizSubmit}>\r\n        <FormGroup>\r\n          <Label for=\"quizTitle\">Quiz Title:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"quizTitle\"\r\n            value={quiz.title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"quizType\">Select Quiz Type:</Label>\r\n          <Input\r\n            type=\"select\"\r\n            id=\"quizType\"\r\n            value={quiz.quizType}\r\n            onChange={handleQuizTypeChange}\r\n          >\r\n            <option value=\"multiple-choice\">Multiple Choice</option>\r\n            <option value=\"true-false\">True/False</option>\r\n            <option value=\"fill-in-the-blank\">Fill in the Blank</option>\r\n          </Input>\r\n        </FormGroup>\r\n        {quiz.questions.map((question, index) => (\r\n          <FormGroup key={index}>\r\n            <Label for={`question${index + 1}`}>Question {index + 1}:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`question${index + 1}`}\r\n              value={question}\r\n              onChange={(e) => handleQuestionChange(index, e)}\r\n            />\r\n          </FormGroup>\r\n        ))}\r\n        <Button color=\"primary\" onClick={handleAddQuestion}>\r\n          Add Question\r\n        </Button>{\" \"}\r\n        <Button type=\"submit\" color=\"success\">\r\n          Create Quiz\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}